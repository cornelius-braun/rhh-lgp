## Syntactic keywords
QUIT
INFEASIBLE
ANY
Terminate

FOL_World{
  hasWait=false
  gamma = 1.
  stepCost = 0.
  timeCost = 0.
}

## activities

## basic predicates
gripper
support
base
tray
grippable
object
target


# dynamic
on
busy     # involved in an ongoing (durative) activity
grasped
held
equal
placed
touched

## KOMO symbols
above
touch
stable
topBoxPlace

## constants (added by the code)


## initial state (generated by the code)
START_STATE {}

### Reward
REWARD {
}

#####################################################################
DecisionRule place {
  X, Y, Z
  { (gripper X) (grasped X Y) (tray Z) (held Y) (INFEASIBLE place X Y Z)! }
  { (grasped X Y)! (busy X)! (busy Y)! (held Y)! (placed Y) (on Z Y)  # logic only
    (stable Y ANY)!     # NLP predicates
    komo(touch X Y)! komo(touch Y Z) komo(above Y Z)
    (stable Z Y) (stable X Y)! (topBoxPlace X Y Z)
    }
}

#####################################################################
# the linked predicate makes sure that we do not try to grasp ourselves
# B is the other end of the chain
# if something complains it is because I removed the object here
DecisionRule grasp {
  A, X
  { (gripper A) (busy A)! (support A)!
    (object X) (gripper X)! (grippable X) (held X)! #(touched A X)! #(placed X)! # oz: added 'base' frame as a logical 'base' in scene.g
    (INFEASIBLE grasp A X)! }
  { (busy A)
    (held X) (grasped A X) (stable ANY X)! (on ANY X)!
    (stable A X) komo(touch A X) (touched A X)
  }
}